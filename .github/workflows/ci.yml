name: CI

on:
  push:
    branches: [main]

jobs:
  setup_runner:
    name: Setup Runner
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Start Instance
        run: ./scripts/start_vm.sh
        env:
          TOKEN: ${{ secrets.COREWEAVE-TOKEN }}
          NAMESPACE: ${{ secrets.COREWEAVE_NAMESPACE }}

  build_and_publish_cog:
    name: Build and Publish Cog
    runs-on: self-hosted
    needs: setup_runner
    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - uses: actions/checkout@master

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Download Weights
        if: success()
        shell: bash
        run: chmod u+x models/download; cog run models/download ${{ secrets.HUGGINGFACE_TOKEN }}

      - name: Update cog CLI
        if: success()
        shell: bash
        run: build_cog.sh

      - name: Build & Tag
        if: success()
        shell: bash
        run: cog build -t stb.sh/sc:latest

      - name: Login to registry
        if: success()
        uses: docker/login-action@v2
        with:
          registry: stb.sh
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to registry
        if: success()
        shell: bash
        run: docker push stb.sh/sc:latest

      - name: Stop Instance
        if: always()
        run: ./scripts/stop_vm.sh
        env:
          TOKEN: ${{ secrets.COREWEAVE-TOKEN }}
          NAMESPACE: ${{ secrets.COREWEAVE_NAMESPACE }}
