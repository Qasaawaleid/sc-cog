#!/usr/bin/env python

import os
import sys

from diffusers import StableDiffusionPipeline
from transformers import AutoTokenizer, AutoModelForSequenceClassification, AutoModelForSeq2SeqLM

MODEL_CACHE = "diffusers-cache"
LANG_DETECTOR_MODEL_CACHE = "lang-detector-model-cache"
LANG_DETECTOR_TOKENIZER_CACHE = "lang-detector-tokenizer-cache"
TRANSLATOR_MODEL_CACHE = "translator-model-cache"
TRANSLATOR_TOKENIZER_CACHE = "translator-tokenizer-cache"

os.makedirs(MODEL_CACHE, exist_ok=True)
# For upscaler
os.makedirs('output', exist_ok=True)  
os.system('wget https://github.com/xinntao/Real-ESRGAN/releases/download/v0.2.5.0/realesr-general-x4v3.pth -P ./weights')
os.system('wget https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.4.pth -P ./weights')
os.system('wget https://github.com/xinntao/Real-ESRGAN/releases/download/v0.1.0/RealESRGAN_x4plus.pth -P ./weights')
os.system('wget https://github.com/xinntao/Real-ESRGAN/releases/download/v0.2.2.4/RealESRGAN_x4plus_anime_6B.pth -P ./weights')
os.system('wget https://github.com/xinntao/Real-ESRGAN/releases/download/v0.2.5.0/realesr-animevideov3.pth -P ./weights')

pipe = StableDiffusionPipeline.from_pretrained(
    "runwayml/stable-diffusion-v1-5",
    cache_dir=MODEL_CACHE,
    use_auth_token=sys.argv[1],
)

detect_language_model_name = "eleldar/language-detection"
detect_language_tokenizer = AutoTokenizer.from_pretrained(detect_language_model_name, cache_dir=LANG_DETECTOR_TOKENIZER_CACHE)
detect_language_model = AutoModelForSequenceClassification.from_pretrained(detect_language_model_name, cache_dir=LANG_DETECTOR_MODEL_CACHE).to("cuda")
        
translate_model_name = "facebook/nllb-200-distilled-1.3B"
translate_tokenizer = AutoTokenizer.from_pretrained(translate_model_name, cache_dir=TRANSLATOR_TOKENIZER_CACHE)
translate_model = AutoModelForSeq2SeqLM.from_pretrained(translate_model_name, cache_dir=TRANSLATOR_MODEL_CACHE).to("cuda")