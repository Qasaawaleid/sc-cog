#!/usr/bin/env python

import os
import sys
from diffusers import StableDiffusionPipeline
from transformers import AutoTokenizer, AutoModelForSeq2SeqLM

SD_MODEL_CACHE = "diffusers-cache"

SD_MODEL_ID = "runwayml/stable-diffusion-v1-5"
SD_MODEL_ID_OJ = "prompthero/openjourney"
SD_MODEL_ID_AR = "nitrosocke/Arcane-Diffusion"
SD_MODEL_ID_GH = "nitrosocke/Ghibli-Diffusion"
SD_MODEL_ID_MD = "nitrosocke/mo-di-diffusion"

TRANSLATOR_MODEL_ID = "facebook/nllb-200-distilled-1.3B"
TRANSLATOR_MODEL_CACHE = "translator-model-cache"
TRANSLATOR_TOKENIZER_CACHE = "translator-tokenizer-cache"

# For Stable Diffusion
os.makedirs(SD_MODEL_CACHE, exist_ok=True)
pipe = StableDiffusionPipeline.from_pretrained(
    SD_MODEL_ID,
    cache_dir=SD_MODEL_CACHE,
    use_auth_token=sys.argv[1],
)
pipe_oj = StableDiffusionPipeline.from_pretrained(
    SD_MODEL_ID_OJ,
    cache_dir=SD_MODEL_CACHE,
    use_auth_token=sys.argv[1],
)
pipe_ar = StableDiffusionPipeline.from_pretrained(
    SD_MODEL_ID_AR,
    cache_dir=SD_MODEL_CACHE,
    use_auth_token=sys.argv[1],
)
pipe_gh = StableDiffusionPipeline.from_pretrained(
    SD_MODEL_ID_GH,
    cache_dir=SD_MODEL_CACHE,
    use_auth_token=sys.argv[1],
)
pipe_md = StableDiffusionPipeline.from_pretrained(
    SD_MODEL_ID_MD,
    cache_dir=SD_MODEL_CACHE,
    use_auth_token=sys.argv[1],
)
    

# For the translator
translate_tokenizer = AutoTokenizer.from_pretrained(TRANSLATOR_MODEL_ID, cache_dir=TRANSLATOR_TOKENIZER_CACHE)
translate_model = AutoModelForSeq2SeqLM.from_pretrained(TRANSLATOR_MODEL_ID, cache_dir=TRANSLATOR_MODEL_CACHE).to("cuda")

# For the upscaler
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/003_realSR_BSRGAN_DFO_s64w8_SwinIR-M_x4_GAN.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/003_realSR_BSRGAN_DFOWMFC_s64w8_SwinIR-L_x4_GAN.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/004_grayDN_DFWB_s128w8_SwinIR-M_noise15.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/004_grayDN_DFWB_s128w8_SwinIR-M_noise25.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/004_grayDN_DFWB_s128w8_SwinIR-M_noise50.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/005_colorDN_DFWB_s128w8_SwinIR-M_noise15.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/005_colorDN_DFWB_s128w8_SwinIR-M_noise25.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/005_colorDN_DFWB_s128w8_SwinIR-M_noise50.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/006_CAR_DFWB_s126w7_SwinIR-M_jpeg10.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/006_CAR_DFWB_s126w7_SwinIR-M_jpeg20.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/006_CAR_DFWB_s126w7_SwinIR-M_jpeg30.pth -P experiments/pretrained_models')
os.system('wget https://github.com/JingyunLiang/SwinIR/releases/download/v0.0/006_CAR_DFWB_s126w7_SwinIR-M_jpeg40.pth -P experiments/pretrained_models')

        